version: "2"
services:
  cdc_commerce_postgres:
    container_name: source-db
    image: debezium/postgres:13-alpine
    hostname: ${POSTGRES_HOST}
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - "./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - "./psql_vol:/var/lib/postgresql/data:rw"

  datagen:
    build: ./generate-data
    container_name: datagen
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    depends_on:
      - cdc_commerce_postgres

  zookeeper:
    image: debezium/zookeeper:2.4
    container_name: zookeeper
    ports:
      - "2181:2181"
    
  kafka:
    container_name: kafka
    image: debezium/kafka:latest
    ports:
      - "9093:9093"
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INT:PLAINTEXT,LISTENER_EXT:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INT://kafka:9092,LISTENER_EXT://localhost:9093
      - KAFKA_LISTENERS=LISTENER_INT://0.0.0.0:9092,LISTENER_EXT://0.0.0.0:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INT
    depends_on:
      - zookeeper
  
  debezium-connect:
    container_name: debezium-connect
    build: ./sink-connector
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    depends_on:
      - zookeeper
      - kafka

  minio:
    image: minio/minio:RELEASE.2022-05-26T05-48-41Z
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - "./minio/data:/data"
    environment:
      MINIO_ACCESS_KEY: ${AWS_KEY_ID}
      MINIO_SECRET_KEY: ${AWS_SECRET_KEY}
    command: server --console-address ":9001" /data

  createbuckets:
    image: minio/mc
    container_name: createbuckets
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "  /usr/bin/mc config host add myminio http://minio:9000 ${AWS_KEY_ID} ${AWS_SECRET_KEY}; /usr/bin/mc rm -rf myminio/commerce;  /usr/bin/mc mb myminio/commerce;  /usr/bin/mc policy set public myminio/commerce; exit 0; "
